<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="bunifuElipse1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="close.Iconimage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAC
        AAAAAgABfn7T4wAAA61JREFUeF7Nm82LzWEUx2di4j8gsWU/Oyz4D8jCzsuOYoGd/2FW9hTR2LBUyp4a
        LymFSTYWEkkMeSs+Z+ac3Ptz5s7v99zn5XzrU7fn5Zzz/Q5zX5o74+nQ0ZN74BI8ghdwB47DZj0SVjIj
        nNCZZXbxIF5265HJ4uBp+Al/HO7DNj0aTjIbPNBZu4inU3rUFwfOj1xYj5ewQ6+EETOJ+Wc64yQu6pVx
        sXGhc3ASoUJglr7mjfEQWDjbOdCH57BdSzSTzKCzeDNO4owVmIffIxtDaBqC9NYZvNk24hfMS5GbI4sp
        NAlBempvb6a+LEqhd53FFKqGIL20pzfLEN5KsR+dxVSqhCA9tJc3w1C+S8FXncVpKBqC1NYeXu8UlqXo
        QmdxWoqEIDW1ttczlQUpLM+hOX4PjJI1BKmlNb1eqYjntVe1PNgLn3UjF1lCkBpay+uRyhfYpy3WJAuQ
        O4SpXjFyd+grvD6swEFtMS42woTAnbrmTRxoHgJn25g3cbBZCJxpa97EheohsBfDvImL1UJgLZZ5EwWK
        h8DjmOZNFCoWAsQ2b6JgiRDkfYh8cOntpZLfvInCJULISTnzJhpEDaG8eRONooVQz7yJhlFCqG/eROPW
        IbQzb2KAViG0N29ikNohxDFvYqBaIcQzb2Kw0iHENW9iQAlBPnLyDEzDV4htXsSQ8tr+tQ6dkzfQ+0OV
        JmLAEm9sRun1oUoTMVhp80a8EBiolnkjTggMUtu80T4EBmhl3mgXAo1bmzfqh0DDKOaNeiHQKJp5o3wI
        NIhq3igXAoVLmP8G8hLX20slfwgULGF+9Y0NlHgDlS8EChUzry2kR8wQKFDcvIm1WCFwsZp5E3sxQuBC
        dfMmzrQNgYPNzJs42yYEDjQ3b+JO3RDYKGX+gLYYLO7WCYGFEn+KJoPv1xbJkhpay+uRyr8/4ePBVnio
        G7nIYt4ktbSm1yuVJdgixft8TWYIWc2bpKbW9nqmck4KP+4sTkMR8yaprT283iksSVF5Q+JtDqWoeZP0
        0F7eDENZkYKfOospVDFvkl7a05tlCB+l2L3O4lCmeqpLFT1zPEXelUJHOotDqPqT70p66wzebH04bIWu
        dTb60NS8SWbQWbwZJ3FVS6wWmYPbI5sb0eSf/XpilqH/HW7BnF5fEwubYFEPTCKUeRMz9Q3hf/Mm2YAb
        etDjPYx/0yKQZDb4oLN6XAffvIkDsyBfP38KdlGeKi/DTj0WVsy4C67ozDb/EzgGs3pMNTPzF6TL4hck
        iPlOAAAAAElFTkSuQmCC
</value>
  </data>
</root>