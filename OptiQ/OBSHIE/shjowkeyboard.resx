<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        TkSuQmCC
</value>
  </data>
</root>